{
    "automerge": true,
    "dependencyDashboard": true,
    "platformAutomerge": true,
    "automergeType": "pr",
    "commitMessage": "bump({{decodeURIComponent depName}}): update {{commitMessageExtra}}",
    "separateMajorMinor": false,
    "prHourlyLimit": 0,
    "prConcurrentLimit": 0,
    "branchConcurrentLimit": 0,
    "rebaseWhen": "conflicted",
    "enabledManagers": ["regex"],
    "regexManagers": [
        {
            "fileMatch": "package\\.yaml$",
            "matchStringsStrategy": "combination",
            "matchStrings": [
                "\n  id:\\s+pkg:github\\/(?<packageName>.+)@(?<currentValue>[^\\s\\?#]+)",
                "\nname: (?<depName>.+)",
                "# renovate:datasource=git-refs[\\s\\S]*pkg:github\\/(?<packageName>.+)@(?<currentDigest>[^\\s\\?#]+)",
                "# renovate:.*versioning=(?<versioning>[^,\n]+)",
                "# renovate:.*datasource=(?<datasource>[^,\n]+)"
            ],
            "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
            "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
            "packageNameTemplate": "{{#if (containsString datasource 'git-refs')}}https://github.com/{{{packageName}}}{{else}}{{{packageName}}}{{/if}}",
            "currentValueTemplate": "{{#if (containsString datasource 'git-refs')}}{{else}}{{{decodeURIComponent currentValue}}}{{/if}}"
        },
        {
            "fileMatch": "package\\.yaml$",
            "matchStringsStrategy": "combination",
            "matchStrings": [
                "\nname: (?<depName>.+)",
                "\n  id:\\s+pkg:cargo\\/(?<packageName>.+)@(?<currentValue>[^\\s\\?#]+)",
                "\\?.*repository_url=(?<githubRepo>https:\\/\\/github\\.com)\\/(?<packageName>[^\\s&]+)",
                "# renovate:.*versioning=(?<versioning>[^,\n]+)"
            ],
            "datasourceTemplate": "{{#if githubRepo}}github-tags{{else}}crate{{/if}}",
            "versioningTemplate": "semver"
        },
        {
            "fileMatch": "package\\.yaml$",
            "matchStringsStrategy": "combination",
            "matchStrings": [
                "\nname: (?<depName>.+)",
                "\n  id:\\s+pkg:golang\\/(?<packageName>.+)@(?<currentValue>[^\\s\\?#]+)"
            ],
            "datasourceTemplate": "go"
        },
        {
            "fileMatch": "package\\.yaml$",
            "matchStringsStrategy": "combination",
            "matchStrings": [
                "\nname: (?<depName>.+)",
                "\n  id:\\s+pkg:gem\\/(?<packageName>.+)@(?<currentValue>[^\\s\\?#]+)"
            ],
            "datasourceTemplate": "rubygems"
        },
        {
            "fileMatch": "package\\.yaml$",
            "matchStringsStrategy": "combination",
            "matchStrings": [
                "\nname: (?<depName>.+)",
                "\n  id:\\s+pkg:composer\\/(?<packageName>.+)@(?<currentValue>[^\\s\\?#]+)"
            ],
            "datasourceTemplate": "packagist"
        },
        {
            "fileMatch": "package\\.yaml$",
            "matchStringsStrategy": "combination",
            "matchStrings": [
                "\nname: (?<depName>.+)",
                "\n  id:\\s+pkg:(?<datasource>npm|pypi|nuget)\\/(?<packageName>.+)@(?<currentValue>[^\\s\\?#]+)"
            ],
            "datasourceTemplate": "{{datasource}}"
        },
        {
            "fileMatch": "package\\.yaml$",
            "matchStringsStrategy": "combination",
            "matchStrings": [
                "\nname: (?<depName>.+)",
                "\n  id:\\s+pkg:generic\\/(?<packageName>.+)@(?<currentValue>[^\\s\\?#]+)",
                "# renovate:.*versioning=(?<versioning>[^,\n]+)",
                "# renovate:.*datasource=(?<datasource>[^,\n]+)"
            ],
            "datasourceTemplate": "{{{datasource}}}",
            "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
            "currentValueTemplate": "{{{decodeURIComponent currentValue}}}"
        }
    ]
}
